% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pooling.R
\name{check_inputs_integrity}
\alias{check_inputs_integrity}
\title{Check user's inputs integrity}
\usage{
check_inputs_integrity(
  data,
  arms,
  y,
  fes = c(),
  cutoff = 0,
  w = NULL,
  estim_func = "pval_OSE",
  compare_to_zero = FALSE,
  clusters = NULL
)
}
\arguments{
\item{data}{is the dataframe containing all our data}

\item{arms}{is a vector containing the column names of all the arms}

\item{y}{is the column name of the outcome of interest}

\item{fes}{is a vector containing the column names of all the fixed effects}

\item{cutoff}{is the cutoff used in the support estimation}

\item{w}{is the column name of the weights}

\item{estim_func}{is the estimation function we should used. Possible arguments are :\cr
\enumerate{
\item 'pval_MSE': a multiple step elimination on p-values\cr
\item 'pval_OSE': a one step elimination on p-values\cr
\item 'puffer_N_LASSO': a LASSO OLS with a Puffer_N transformation\cr
\item 'beta_OSE': a one step elimination on beta values\cr
\item 'puffer_LASSO': a LASSO OLS with a Puffer transformation\cr
(2) and (3) should be equivalent, as well as (4) and (5)
}}

\item{compare_to_zero}{is a boolean.\cr
If TRUE, the code considers that a policy dominates a marginal if all dosages are greater\cr
If FALSE, then they must also have the exact same activated arms (the zeros of the policy vectors are at identical indexes)}
}
\value{
returns a message telling if the data's integrity is validated or not, and if not, for what reason
}
\description{
Do a bunch of checks on the inputs
}
\examples{
arms = c('financial_incentive','reminder','information')
fes = c('fes_1')
y = 'outcome'
w = 'weights'
A1 = c(0,0,0,0,0,1,1,1,1,1)
A2 = c(1,1,0,0,1,1,0,0,1,1)
A3 = c(0,1,2,3,0,3,2,1,0,1)
F1 = c(0,1,0,0,0,1,0,1,0,0)
Y  = c(5,4,3,5,4,5,4,2,3,2)
W  = c(1,1,1,2,1,2,2,1,1,2)
data = data.frame(financial_incentive = A1, reminder = A2, information = A3, fes_1 = F1, outcome = Y, weights=W)
check_inputs_integrity(data=data, arms=arms, y=y, fes=fes, w=w, cutoff = 0.3, estim_func='pval_OSE', FALSE)
}
