% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/threshold_functions.R
\name{plot_pval_MSE}
\alias{plot_pval_MSE}
\title{Plot p-values in the pval multi-step elimination}
\usage{
plot_pval_MSE(data, arms, y, fes = c(), w = NULL, compare_to_zero = FALSE)
}
\arguments{
\item{data}{is the dataframe containing all our data}

\item{arms}{is a vector containing the column names of all the arms}

\item{y}{is the column name of the outcome of interest}

\item{fes}{is a vector containing the column names of all the fixed effects}

\item{w}{is the column name of the weights}

\item{compare_to_zero}{is a boolean.\cr
If TRUE, the code considers that a policy dominates a marginal if all dosages are greater\cr
If FALSE, then they must also have the exact same activated arms (the zeros of the policy vectors are at identical indexes)}
}
\value{
returns the plot of the ordered p-values, allowing to see the corresponding size of support for each p-values cutoff in the pval multi-step elimination
}
\description{
Plot the ordered p-values in the multi-step elimination. \cr
This allows to choose a thresholds_OSE according to a targeted support size. \cr
This is done by simulating a multi-step p-value elimination.
}
\examples{
arms = c('financial_incentive','reminder','information')
fes = c('fes_1')
y = 'outcome'
w = 'weights'
A1 = c(0,0,0,0,0,1,1,1,1,1)
A2 = c(1,1,0,0,1,1,0,0,1,1)
A3 = c(0,1,2,3,0,3,2,1,0,1)
F1 = c(0,1,0,0,0,1,0,1,0,0)
Y  = c(5,4,3,5,4,5,4,2,3,2)
W  = c(1,1,1,2,1,2,2,1,1,2)
data = data.frame(financial_incentive = A1, reminder = A2, information = A3, fes_1 = F1, outcome = Y, weights=W)
plot_pval_MSE(data,arms,y, fes,w,FALSE)
}
